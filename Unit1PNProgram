#include <iostream>
#include <cmath>

class Prime {
public:
    Prime(unsigned int iN) : m_iN(iN) {}

    bool isPrime() const {
        if (m_iN < 2) {
            return false;
        }
        for (unsigned int iX = 2; iX <= std::sqrt(m_iN); ++iX) {
            if (m_iN % iX == 0) {
                return false;
            }
        }
        return true;
    }

    bool isSemiPrime() const {
        if (m_iN < 4) {
            return false;
        }
        for (unsigned int i = 2; i <= std::sqrt(m_iN); ++i) {
            if (m_iN % i == 0) {
                unsigned int quotient = m_iN / i;
                if (isPrime(i) && isPrime(quotient) && (i * quotient == m_iN)) {
                    return true;
                }
            }
        }
        return false;
    }

private:
    unsigned int m_iN;

    bool isPrime(unsigned int num) const {
        if (num < 2) {
            return false;
        }
        for (unsigned int iX = 2; iX <= std::sqrt(num); ++iX) {
            if (num % iX == 0) {
                return false;
            }
        }
        return true;
    }
};

int main() {
    unsigned int num;
    num = 13;

    Prime prime(num);
    std::cout << num << " je " << (prime.isPrime() ? "" : "ni ") << "praštevilo.\n";
    std::cout << num << " je " << (prime.isSemiPrime() ? "" : "ni ") << "polpraštevilo.\n";

    return 0;
}
